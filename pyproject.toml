[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "svg-generator-mcp"
version = "1.0.0"
description = "AI-powered MCP server for generating high-quality SVG illustrations using MFLUX"
readme = "README.md"
license = "MIT"
authors = [
    { name = "aloshy-ai", email = "support@aloshy.ai" }
]
keywords = ["mcp", "svg", "ai", "illustration", "mflux", "stable-diffusion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies - keep minimal for fast installation
]

[project.optional-dependencies]
# Optional AI dependencies - installed automatically by main.py
ai = [
    "mflux>=0.1.0; platform_machine=='arm64' and sys_platform=='darwin'",
    "torch>=2.0.0; platform_machine!='arm64' or sys_platform!='darwin'",
    "torchvision>=0.15.0; platform_machine!='arm64' or sys_platform!='darwin'",
    "diffusers>=0.20.0; platform_machine!='arm64' or sys_platform!='darwin'",
    "transformers>=4.30.0; platform_machine!='arm64' or sys_platform!='darwin'",
    "accelerate>=0.20.0; platform_machine!='arm64' or sys_platform!='darwin'",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/aloshy-ai/svg-generator-mcp"
Documentation = "https://github.com/aloshy-ai/svg-generator-mcp#readme"
Repository = "https://github.com/aloshy-ai/svg-generator-mcp"
Issues = "https://github.com/aloshy-ai/svg-generator-mcp/issues"

[project.scripts]
svg-generator-mcp = "svg_generator_mcp.main:main"

[tool.hatch.build]
# Include Node.js build artifacts and dependencies
include = [
    "svg_generator_mcp/",
    "dist/",
    "package.json",
    "package-lock.json",
    "node_modules/",
]
exclude = [
    "src/",
    "*.test.ts",
    "*.test.js",
    ".github/",
    "Dockerfile",
    "docker-compose.yml",
    "*.md",
]

# Node.js build is handled manually in CI/CD pipeline

[tool.hatch.build.targets.wheel]
packages = ["svg_generator_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "svg_generator_mcp/",
    "src/",
    "package.json",
    "package-lock.json",
    "tsconfig.json",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.hatch.version]
path = "svg_generator_mcp/__init__.py"

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "W", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["S101", "S102", "PLR2004", "PLR0913", "C901", "PLR0915"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"main.py" = ["T201", "S602", "S603"]  # Allow print statements and subprocess usage

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=svg_generator_mcp --cov-report=term-missing --cov-report=html"